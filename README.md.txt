1.프록시 정의

- 객체를 감싸주는 녀석  호출 -> 서비스$$머시기 -> 서비스 이런 형식으로 호출하면 서비스를 직접 타겟이아니라 프록시를 바라봄

 
2.AOP 정의
AOP의 핵심 개념과 용어:

Aspect(관점): Aspect는 관심사를 모듈화한 것으로, 특정 작업 또는 동작과 관련된 코드와 설정을 포함하는 모듈입니다.
                 예를 들어 로깅, 보안, 트랜잭션 처리를 담당하는 Aspect가 있을 수 있습니다.
                 -어떤걸 할꺼냐

Join Point(조인 포인트): 조인 포인트는 애플리케이션 실행 중 특정 지점을 나타내며,
                               일반적으로 메서드 호출 또는 객체 생성과 관련됩니다.
                               -언제 동작시킬거냐

Advice(어드바이스): Advice는 관심사의 실제 동작을 정의하는 코드 조각입니다.
                          Advice는 조인 포인트에서 실행되며, 이때 어떤 작업을 수행할지 정의합니다.
                          예를 들어, "이전에 실행되는"(@Before) Advice는 조인 포인트 실행 전에 코드를 실행합니다.               
                          -

Pointcut(포인트컷): 포인트컷은 조인 포인트의 패턴을 정의하고, 어느 조인 포인트에서 Advice를 실행할지 선택하는 데 사용됩니다. 
                         예를 들어, "execution(* com.example.service..(..))"와 같은 표현식으로 메서드 호출을 지정할 수 있습니다.

Target Object(대상 객체): 대상 객체는 실제 비즈니스 로직을 포함하고 있는 객체로, Aspect에 의해 감싸지고 조작될 수 있는 객체입니다.

Weaving(위빙): 위빙은 Aspect의 Advice를 조인 포인트에 적용하는 프로세스를 의미합니다.
                    위빙은 컴파일 타임, 클래스 로딩 시간 또는 실행 중에 수행될 수 있습니다.